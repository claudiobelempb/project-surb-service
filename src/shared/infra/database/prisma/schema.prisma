// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  firstName String    @map("first_name") @db.VarChar(32)
  lastName  String    @map("last_name") @db.VarChar(32)
  email     String    @unique @db.VarChar(32)
  password  String    @db.VarChar(100)
  isActive  Boolean   @default(true) @map("is_active") @db.Boolean
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp

  times        Time[]
  services     Service[]
  appointments Appointment[]

  @@map("user")
}

model Time {
  id        String    @id @default(uuid()) @db.Uuid
  anme      String    @db.VarChar()
  isActive  Boolean   @default(true) @map("is_active") @db.Boolean
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  appointments Appointment[]

  @@map("time")
}

model Service {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar()
  price     Decimal   @db.Decimal(10, 2)
  isActive  Boolean   @default(true) @map("is_active") @db.Boolean
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  appointments Appointment[]

  @@map("service")
}

model Appointment {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @db.VarChar()
  price     Decimal   @db.Decimal(10, 2)
  isActive  Boolean   @default(true) @map("is_active") @db.Boolean
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp

  userId String @unique @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  timeId String @unique @map("time_id") @db.Uuid
  time   Time   @relation(fields: [timeId], references: [id])

  serviceId String  @unique @map("service_id") @db.Uuid
  service   Service @relation(fields: [serviceId], references: [id])

  @@map("appointment")
}
